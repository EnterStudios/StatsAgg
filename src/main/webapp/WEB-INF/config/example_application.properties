### 'Core' configuration options
#
# flush_time_agg : This controls how often each of the aggregators (Statsd, Graphite, Graphite Passthrough) run their respective aggregation routines.
#                  Setting this value too low could result in few metric samples being aggregated, and could lead to excessive CPU utilization.
#                  Setting this value too high could result in building up too many metrics in memory, which could lead to program instability.
#                  A recommended range is between 5000ms & 60000ms.
#                  Default : 10000
#
# debug_mode_enabled : When enabled, debugging info is output to the log files & console. Included are: raw metrics on arrival, aggregated metrics to output.
#                      Default : false
flush_time_agg = 10000
debug_mode_enabled = false



### 'Sending data to Graphite' configuration options
#
# graphite_output_module_n : StatsAgg supports outputting to multiple Graphite endpoints. Each Graphite endpoint is defined in StatsAgg via a 'Graphite Output Module'.
#                            The format for a 'Graphite Output Module' is: graphite_output_module_n=graphite_output_enabled,graphite_host,graphite_port,graphite_num_send_retry_attempts
#                              graphite_output_enabled : Enables sending metrics to graphite. Valid values are 'true' or 'false'.
#                              graphite_host : The domain, hostname, or IP address that graphite runs on (which this application will send metrics to).
#                              graphite_port : The port that graphite runs on (which this application will send metrics to). Graphite servers usually listen on port 2003. 
#                              graphite_num_send_retry_attempts : The number of times to attempt to send metrics to graphite before giving up. A recommend retry count is 3.
#                              Note: the 'n' at the end of 'graphite_output_module_n' is a number that is unique to that output module.
#                            Examples: graphite_output_module_1=true,graphite.some-domain.com,2003,3
#                                      graphite_output_module_2=true,graphite.some-other-domain.com,2003,3
#
# graphite_max_batch_size : The maximum key/value pairs (data points) to send to Graphite in a single post. 
#                           This is a global setting for all 'Graphite Output Modules'.
#                           Default : 100
graphite_output_module_1 = false,graphite.some-domain.com,2003,3
graphite_max_batch_size = 100



### 'Listener' configuration options
#
# statsd_tcp_listener_enabled : Defines whether this application will listen for & collect statsd metrics via tcp.
#                               This listener accepts tcp traffic in the statsd format.          
#                               Default : true
#
# statsd_tcp_listener_port : The tcp port that the statsd listener runs on.
#                            Default : 8125
#
# statsd_udp_listener_enabled : Defines whether this application will listen for & collect statsd metrics via udp.
#                               This listener accepts udp traffic in the statsd format.          
#                               Default : true
#
# statsd_udp_listener_port : The udp port that the statsd listener runs on.
#                            Default : 8125
#
# graphite_aggregator_tcp_listener_enabled : Defines whether this application will listen for & collect graphite metrics via tcp. 
#                                            This graphite listener aggregates metrics.
#                                            This listener accepts tcp traffic in the graphite format.                                
#                                            Default : true
#
# graphite_aggregator_tcp_listener_port : The tcp port that the graphite aggregation listener runs on.
#                                         Default : 2004
#
# graphite_aggregator_udp_listener_enabled : Defines whether this application will listen for & collect graphite metrics via udp.
#                                            This graphite listener aggregates metrics.
#                                            This listener accepts udp traffic in the graphite format.                                
#                                            Default : true
#
# graphite_aggregator_udp_listener_port : The udp port that the graphite aggregation listener runs on.
#                                         Default : 2004
#
# graphite_passthrough_tcp_listener_enabled : Defines whether this application will listen for & collect graphite metrics via tcp. 
#                                             This graphite listener does not aggregate metrics. It is purely a pass through for graphite metrics.
#                                             This listener accepts tcp traffic in the graphite format.                                
#                                             Default : true
#
# graphite_passthrough_tcp_listener_port : The tcp port that the graphite passthrough listener runs on.
#                                          Default : 2003
#
# graphite_passthrough_udp_listener_enabled : Defines whether this application will listen for & collect graphite metrics via udp.
#                                             This graphite listener does not aggregate metrics. It is purely a pass through for graphite metrics.
#                                             This listener accepts udp traffic in the graphite format.                                
#                                             Default : true
#
# graphite_passthrough_udp_listener_port : The udp port that the graphite passthrough listener runs on.
#                                          Default : 2003
statsd_tcp_listener_enabled = true
statsd_tcp_listener_port = 8125
statsd_udp_listener_enabled = true
statsd_udp_listener_port = 8125
graphite_aggregator_tcp_listener_enabled = true
graphite_aggregator_tcp_listener_port = 2004
graphite_aggregator_udp_listener_enabled = true
graphite_aggregator_udp_listener_port = 2004
graphite_passthrough_tcp_listener_enabled = true
graphite_passthrough_tcp_listener_port = 2003
graphite_passthrough_udp_listener_enabled = true
graphite_passthrough_udp_listener_port = 2003



### 'Metric naming' configuration options
#
# global_metric_name_prefix_enabled : Defines whether all metrics will have a prefix prepended to their metric paths                             
# Default : false
#
# global_metric_name_prefix_value : The value of the global metric name prefix
# Default : statsagg
#
# global_aggregated_metrics_separator_string : When metric aggregation results in multiple outputted values, suffix labels are appended to their metric paths (aka buckets). 
#                                              This variable controls what the separation character(s) are. 
#                                              The default value of "." is recommended when pairing StatsAgg with Graphite.
#                                              This applies to graphite-aggregated metrics, statsd timers, and statsd counters.
#                                              Default : .
#
# statsd_metric_name_prefix_enabled : Defines whether all statsd metrics will have a prefix prepended to their metric paths                             
#                                     Default : false
#
# statsd_metric_name_prefix_value : The value of the metric name prefix
#                                   Default : statsd
#
# statsd_counter_metric_name_prefix_enabled : Defines whether statsd counter metrics will have a prefix prepended to their metric paths     
#                                             Default : false
#
# statsd_counter_metric_name_prefix_value : The value of the metric name prefix
#                                           Default : counter
#
# statsd_gauge_metric_name_prefix_enabled : Defines whether statsd gauge metrics will have a prefix prepended to their metric paths     
#                                           Default : false
#
# statsd_gauge_metric_name_prefix_value : The value of the metric name prefix
#                                         Default : gauge
#
# statsd_timer_metric_name_prefix_enabled : Defines whether statsd timer metrics will have a prefix prepended to their metric paths     
#                                           Default : false
#
# statsd_timer_metric_name_prefix_value : The value of the metric name prefix
#                                         Default : timer
#
# statsd_set_metric_name_prefix_enabled : Defines whether statsd set metrics will have a prefix prepended to their metric paths     
#                                         Default : false
#
# statsd_set_metric_name_prefix_value : The value of the metric name prefix
#                                       Default : set
#
# graphite_aggregator_metric_name_prefix_enabled : Defines whether all graphite aggregator metrics will have a prefix prepended to their metric paths                             
#                                                  Default : false
#
# graphite_aggregator_metric_name_prefix_value : The value of the metric name prefix
#                                                Default : graphite-agg
#
# graphite_passthrough_metric_name_prefix_enabled : Defines whether all graphite passthrough metrics will have a prefix prepended to their metric paths                             
#                                                   Default : false
#
# graphite_passthrough_metric_name_prefix_value : The value of the metric name prefix
#                                                 Default : graphite
global_metric_name_prefix_enabled = false
global_metric_name_prefix_value = statsagg
global_aggregated_metrics_separator_string = .
statsd_metric_name_prefix_enabled = false
statsd_metric_name_prefix_value = statsd
statsd_counter_metric_name_prefix_enabled = false
statsd_counter_metric_name_prefix_value = counter
statsd_gauge_metric_name_prefix_enabled = false
statsd_gauge_metric_name_prefix_value = gauge
statsd_timer_metric_name_prefix_enabled = false
statsd_timer_metric_name_prefix_value = timer
statsd_set_metric_name_prefix_enabled = false
statsd_set_metric_name_prefix_value = set
graphite_aggregator_metric_name_prefix_enabled = false
graphite_aggregator_metric_name_prefix_value = graphite-agg
graphite_passthrough_metric_name_prefix_enabled = false
graphite_passthrough_metric_name_prefix_value = graphite



### 'Inactive metric' configuration options
#
# statsd_counter_send_0_on_inactive : When set to true, output a value of '0' for a bucket if no new metrics arrive during the aggregation window ("flush_time_agg").
#                                     When set to false, don't output anything for an inactive bucket.
#                                     Note - The previous window's metric aggregation counter value(s) are not persisted, so they will be lost if this application is stopped.
#                                     Default : true
#
# statsd_timer_send_0_on_inactive : When set to true, output a value of '0' for a bucket if no new metrics arrive during the aggregation window ("flush_time_agg").
#                                   When set to false, don't output anything for an inactive bucket.
#                                   Note - The previous window's metric aggregation counter value(s) are not persisted, so they will be lost if this application is stopped.
#                                   Default : true
#
# statsd_gauge_send_previous_value : If no new metrics arrive for a specific statsd gauge metric bucket during the aggregation window, then send the previous aggregation window's value(s).
#                                    Note - The previous window's metric aggregation gauge value(s) are persisted, so they will NOT be lost if this application is stopped.
#                                    Default : true
#
# statsd_set_send_0_on_inactive : When set to true, output a value of '0' for a bucket if no new metrics arrive during the aggregation window ("flush_time_agg").
#                                 When set to false, don't output anything for an inactive bucket.
#                                 Note - The previous window's metric aggregation counter value(s) are not persisted, so they will be lost if this application is stopped.
#                                 Default : true
#
# graphite_aggregator_send_previous_value : If no new metrics arrive for a specific graphite metric path during the aggregation window, then send the previous aggregation window's value(s).
#                                           Note - The previous window's metric aggregation graphite value(s) are not persisted, so they will be lost if this application is stopped.
#                                           Default : false
#
# graphite_passthrough_send_previous_value : If no new metrics arrive for a specific graphite metric path during the aggregation window, then send the previous aggregation window's value(s).
#                                            Note 1 - The previous window's metric aggregation graphite value(s) are not persisted, so they will be lost if this application is stopped.
#                                            Note 2 - Enabling this option is not recommended. The nature of passthrough metrics is that self-reported timestamp of the metric is used.
#                                                     Enabling this option uses the current timestamp when sending previous metric values, and if a new metric value is sent 
#                                                     & uses an older timestamp (ex - there's a 1min lag on the metric being sent), then the 'send previous value' & 'lagging real metric' 
#                                                     data will both have been sent as output. This could make the output confusing to a data output consumer.
#                                            Default : false
statsd_counter_send_0_on_inactive = true
statsd_timer_send_0_on_inactive = true
statsd_gauge_send_previous_value = true
statsd_set_send_0_on_inactive = true
graphite_aggregator_send_previous_value = false
graphite_passthrough_send_previous_value = false



### 'Statsd' configuration options
#
# statsd_percent_threshold : StatsAgg optionally makes some Statsd metric names more human-readable for certain metric types (ex- timer). 
#                            To use the StatsAgg naming convention, set this to true. To use the Statsd naming convention, set this to false.
#                            Default : false
#
# statsd_percent_threshold : For statsd timers, the nth percentile is computed for the values associated with a given bucket. This variable controls what the value of 'n' is.
#                            Note: This functionality is not fully implemented yet.
#                            Default : 90
statsd_use_statsagg_output_naming_convention = false
statsd_nth_percentile_threshold = 90



### 'Alert' configuration options
#
# alert_routine_enabled : Specifies whether the alerting routine runs or not. When this option is turned off, alerts & alert suspensions will never be checked against their criteria.
#                         Because setting this option to 'false' disables a large potion of StatsAgg's core functionality, it is highly recommended that this setting remain set to 'true'.
#                         Disabling this option may have a positive impact on application performance when alerting is not needed.           
#                         Default : true
#
# alert_routine_interval : The interval (in milliseconds) that the alert routine & cleanup routine run on. 
#                          Running this more frequently than the 'flush_time_agg' value is not advised.                
#                          Default : 5000
#
# alert_send_email_enabled : Controls whether the email is actually sent or not. This should only be off for debugging purposes.
#                            Default : false
#
# alert_max_metrics_in_email : The maximum number of metrics that will be put in an alert email. 
#                              Sizing this value too could large could make emails very large             
#                              Default : 100
#
# alert_output_alert_status_to_graphite : When outputting metrics to Graphite is enabled, enabling this setting will output the status of each alert to Graphite.
#                                         0 = alert not triggered, 1 = caution triggered, 2 = danger triggered, 3 = caution & danger triggered
#                                         Default : true
#
# alert_output_alert_status_to_graphite_metric_prefix : When 'alert_output_alert_status_to_graphite' is enabled, this defines the metric prefix 
#                                                       that is used to group the alert statuses.
#                                                       Default : StatsAgg-Alerts
#
# alert_statsagg_location : A url to the root location of StatsAgg. 
#                           When this is defined, email alerts will have clickable links to the StatsAgg user interface.
#                           Example: alert_statsagg_location=http://mywebsite.com/StatsAgg
#                           Default : (blank)
#
# alert_wait_time_after_restart : When StatsAgg restarts, alerts that were 'active' before the restart will not have any datapoints.
#                                 This makes the alerts prone to quickly firing a 'Positive Alert' & then re-alert when new datapoints arrive.
#                                 This variable delays the alert routine from firing a 'Positive Alert' for 'alert_wait_time_after_restart' milliseconds.
#                                 This allows new datapoints to be collected by StatsAgg & helps avoid false alerts.
#                                 Default : 120000
#
# alert_smtp_host : The email smtp server host (ip or dns)
#                   Default : 127.0.0.1
#
# alert_smtp_port : The smtp port    
#                   Default : 25
#
# alert_smtp_username : The smtp username
#                       Default : (blank)
#
# alert_smtp_password : The smtp password   
#                       Default : (blank)
#
# alert_smtp_connection_timeout : The connection timeout to the smtp server, in milliseconds
#                                 Default : 15000
#
# alert_smtp_use_ssl_tls : Specifies whether to use ssl/tls with the smtp server or not
#                          Default : false
#
# alert_smtp_use_starttls : Specifies whether to use starttls with the smtp server or not
#                           Default : false
#
# alert_smtp_from_address : The 'from address' on emails sent by StatsAgg 
#                           Default : noreply@noreply.com
#
# alert_smtp_from_name : The 'from name' on emails sent by StatsAgg
#                        Default : StatsAgg
alert_routine_enabled = true
alert_routine_interval = 5000
alert_send_email_enabled = false
alert_max_metrics_in_email = 100
alert_output_alert_status_to_graphite = true
alert_output_alert_status_to_graphite_metric_prefix = StatsAgg-Alerts
alert_statsagg_location =
alert_wait_time_after_restart = 120000
alert_smtp_host = 127.0.0.1
alert_smtp_port = 25
alert_smtp_username =
alert_smtp_password =
alert_smtp_connection_timeout = 15000
alert_smtp_use_ssl_tls = false
alert_smtp_use_starttls = false
alert_smtp_from_address = noreply@noreply.com
alert_smtp_from_name = StatsAgg



### 'Website GUI' configuration options
#
# The StatsAgg website user interface can be customized to include custom url links in the 'actions menu'.
# The format for a custom link in the actions menu is:
#   custom_action_url_n=url,link_text
#     Note: the 'n' at the end of 'custom_action_url_n' is a number that is unique to that custom link.
#     Examples: custom_action_url_1=http://www.google.com,Goto google
#               custom_action_url_2=http://www.yahoo.com,Goto yahoo
custom_action_url_1=http://google.com,Goto google
